---
// Component to show top tippers and most tipped creations
export interface Props {
  limit?: number;
  className?: string;
}

const { limit = 5, className = '' } = Astro.props;

// Fetch top tips data
const response = await fetch(`${Astro.url.origin}/api/tips`);
const { tips } = await response.json();

// Aggregate tips by creator
const creatorTips = tips.reduce((acc: any, tip: any) => {
  if (!acc[tip.to]) {
    acc[tip.to] = { address: tip.to, totalTips: 0, tipCount: 0 };
  }
  acc[tip.to].totalTips += parseFloat(tip.amount);
  acc[tip.to].tipCount++;
  return acc;
}, {});

// Sort by total tips
const topCreators = Object.values(creatorTips)
  .sort((a: any, b: any) => b.totalTips - a.totalTips)
  .slice(0, limit);

// Aggregate tips by tipper
const tipperStats = tips.reduce((acc: any, tip: any) => {
  if (!acc[tip.from]) {
    acc[tip.from] = { address: tip.from, totalTipped: 0, tipCount: 0 };
  }
  acc[tip.from].totalTipped += parseFloat(tip.amount);
  acc[tip.from].tipCount++;
  return acc;
}, {});

// Sort by total tipped
const topTippers = Object.values(tipperStats)
  .sort((a: any, b: any) => b.totalTipped - a.totalTipped)
  .slice(0, limit);
---

<div class={`tips-leaderboard ${className}`}>
  <div class="grid md:grid-cols-2 gap-6">
    <!-- Top Creators -->
    <div class="bg-background-light/10 rounded-xl border border-background-light/20 p-6">
      <h3 class="text-lg font-bold mb-4 flex items-center gap-2">
        <span>üèÜ</span>
        Top Creators
      </h3>
      <div class="space-y-3">
        {topCreators.map((creator: any, index: number) => (
          <div class="flex items-center justify-between">
            <div class="flex items-center gap-3">
              <span class="text-2xl font-bold text-foreground/50">
                {index + 1}
              </span>
              <div>
                <p class="font-medium">{creator.address.slice(0, 6)}...{creator.address.slice(-4)}</p>
                <p class="text-sm text-foreground/60">{creator.tipCount} tips received</p>
              </div>
            </div>
            <div class="text-right">
              <p class="font-medium text-primary">{creator.totalTips} MOON</p>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Top Tippers -->
    <div class="bg-background-light/10 rounded-xl border border-background-light/20 p-6">
      <h3 class="text-lg font-bold mb-4 flex items-center gap-2">
        <span>üí´</span>
        Top Supporters
      </h3>
      <div class="space-y-3">
        {topTippers.map((tipper: any, index: number) => (
          <div class="flex items-center justify-between">
            <div class="flex items-center gap-3">
              <span class="text-2xl font-bold text-foreground/50">
                {index + 1}
              </span>
              <div>
                <p class="font-medium">{tipper.address.slice(0, 6)}...{tipper.address.slice(-4)}</p>
                <p class="text-sm text-foreground/60">{tipper.tipCount} tips sent</p>
              </div>
            </div>
            <div class="text-right">
              <p class="font-medium text-accent">{tipper.totalTipped} MOON</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
  
  <!-- Total Stats -->
  <div class="mt-6 text-center">
    <p class="text-sm text-foreground/60">
      Total tips: <span class="font-medium text-foreground">{tips.length}</span> | 
      Total volume: <span class="font-medium text-primary">
        {tips.reduce((sum: number, tip: any) => sum + parseFloat(tip.amount), 0)} MOON
      </span>
    </p>
  </div>
</div>

<style>
  .tips-leaderboard {
    max-width: 1000px;
    margin: 0 auto;
  }
</style>