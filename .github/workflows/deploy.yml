name: Deploy to Cloudflare

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-worker:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: pnpm/action-setup@v2
      with:
        version: 10.10.0
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build packages
      run: pnpm build
    
    - name: Install Wrangler
      run: pnpm add -g wrangler@latest
    
    - name: Deploy API Worker
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      run: |
        cd workers/api_generate
        wrangler deploy --env production

  deploy-pages:
    runs-on: ubuntu-latest
    environment: production
    needs: deploy-worker
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: pnpm/action-setup@v2
      with:
        version: 10.10.0
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build web app
      run: |
        cd apps/web
        pnpm build
    
    - name: Deploy to Cloudflare Pages
      uses: cloudflare/pages-action@v1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        projectName: moonlore
        directory: apps/web/dist
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}
        branch: main
        wranglerVersion: '3'

  tag-release:
    runs-on: ubuntu-latest
    needs: [deploy-worker, deploy-pages]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create deployment tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        TAG="deploy-$(date +'%Y%m%d-%H%M%S')"
        git tag -a $TAG -m "Deployment to production on $(date)"
        git push origin $TAG
    
    - name: Notify deployment
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Deployment successful! Check the [production site](https://moonbirds-art-forge.pages.dev)'
          })